// Mocks generated by Mockito 5.2.0 from annotations
// in flutter_winning_eleven/test/blocs/team_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:flutter_winning_eleven/models/api_response.dart' as _i3;
import 'package:flutter_winning_eleven/services/api_client.dart' as _i2;
import 'package:flutter_winning_eleven/services/repository.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeApiClient_0 extends _i1.Fake implements _i2.ApiClient {}

class _FakeApiResponse_1<T> extends _i1.Fake implements _i3.ApiResponse<T> {}

/// A class which mocks [Repository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRepository extends _i1.Mock implements _i4.Repository {
  MockRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ApiClient get apiClient =>
      (super.noSuchMethod(Invocation.getter(#apiClient),
          returnValue: _FakeApiClient_0()) as _i2.ApiClient);
  @override
  _i5.Future<_i3.ApiResponse<dynamic>> fetchCompetition(
          String? competitionCode) =>
      (super.noSuchMethod(
              Invocation.method(#fetchCompetition, [competitionCode]),
              returnValue: Future<_i3.ApiResponse<dynamic>>.value(
                  _FakeApiResponse_1<dynamic>()))
          as _i5.Future<_i3.ApiResponse<dynamic>>);
  @override
  _i5.Future<_i3.ApiResponse<dynamic>> fetchPastMonthFinishedMatches(
          {DateTime? dateFrom, DateTime? dateTo}) =>
      (super.noSuchMethod(
              Invocation.method(#fetchPastMonthFinishedMatches, [],
                  {#dateFrom: dateFrom, #dateTo: dateTo}),
              returnValue: Future<_i3.ApiResponse<dynamic>>.value(
                  _FakeApiResponse_1<dynamic>()))
          as _i5.Future<_i3.ApiResponse<dynamic>>);
  @override
  _i5.Future<_i3.ApiResponse<dynamic>> fetchTeam(int? id) =>
      (super.noSuchMethod(Invocation.method(#fetchTeam, [id]),
              returnValue: Future<_i3.ApiResponse<dynamic>>.value(
                  _FakeApiResponse_1<dynamic>()))
          as _i5.Future<_i3.ApiResponse<dynamic>>);
}
